# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: ["published"]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install
    - name: Lint with flake8
      run: |
        poetry run ruff check src
    - name: Test with pytest
      run: |
        poetry run pytest
    - name: Build Dist
      run: poetry build
    - name: Store distribution files
      uses: actions/upload-artifact@v4
      with:
        name: python-distributions
        path: dist/

  publish-py-pi-test:
    name: Publish dykes to Test PyPI
    if: ${{ github.event.action == 'published' }}
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/dykes

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-distributions
          path: dist/
      - name: Publish dykes to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-py-pi:
    name: Publish dykes to PyPI
    if: ${{ github.event.action == 'published' && !github.event.release.prerelease }}
    needs:
    - publish-py-pi-test
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/dykes

    permissions:
      id-token: write

    steps:
      - name: Download the dists.
        uses: actions/download-artifact@v4
        with:
          name: python-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
